<project name="Library" default="technicaldoc" basedir="." xmlns:jacoco="antlib:org.jacoco.ant">
	    
	  <property name="system.name" value="Library" />
	  
	  <property name="src.dir" location="${basedir}/src" />
	  <property name="lib.dir" location="${basedir}/lib" />
	  <property name="build.dir" location="${basedir}/build" />
	  <property name="test.dir" location="${basedir}/test" />
	  <property name="doc.dir" location="${basedir}/doc"/>
	  <property name="testdoc.dir" location="${basedir}/doc"/>
	  <property name="reports.dir" location="${basedir}/reports"/>
		
	  <property name="junit.jar" location="${lib.dir}/junit-4.6.jar" />
	
	  <property name="api.doc.dir" location="${doc.dir}/api/"/>
	  <property name="design.doc.dir" location="${doc.dir}/design/"/>
	
	  <property name="umlet.home.dir" location="${lib.dir}/umlet/" />
	  <property name="design.diagrams.dir" location="${basedir}/design/diagrams" />
	
	  <property name="req.dir" location="${basedir}/requirements" />
	  <property name="req.doc.dir" location="${doc.dir}/requirements" />
	  <property name="coverage.dir" location="${reports.dir}/coverage" />
	
	  <patternset id = "meta.files">
	  	 <include name="**/*.xml"/>
	  </patternset>
		  
	  <path id="compile.classpath">
	    <fileset dir ="${lib.dir}">
	    	<include name ="**/*.jar"/>
	    	<exclude name="umlet/**/*.jar"/>
	    </fileset>
	  </path>

	  <target name="init" description="Initialises Build.">
	       <mkdir dir="${build.dir}" />
	  	   <mkdir dir="${reports.dir}" />
	  	   <mkdir dir="${doc.dir}"/>
	  </target>

	  <target name="clean-diagrams">
	  	  <delete>
	  	    <fileset dir="${design.diagrams.dir}" includes="**/*.png"/>
	  	  </delete>

		  <delete>
		  	<fileset dir="${req.dir}" includes="**/*.png"/>
		  </delete>
	  </target>
	
	  <target name="clean-all" description="Delete build directory.">
	       <delete dir="${build.dir}" />
           <delete dir="${reports.dir}" />
           <delete dir="${doc.dir}"/>	
	  </target>
	
	<property name="junit.dir" location="${reports.dir}/junit" />
	
	  <property name="checkstyle.dir" location="${reports.dir}/checkstyle"/>
	  <property name="checkstyle.jar" value="${lib.dir}/checkstyle-all-5.0.jar"/>

	  <path id="checkstyle.classpath">
	    <pathelement path="${build.dir}"/>
	    <path refid="compile.classpath"/>
	  </path>


	  <target name="design-umlet" description="Converts Design UML diagram files to images">
	   	 <available file="${umlet.home.dir}/umlet.jar" property="umletExists"/>
	  	  <fail unless="umletExists" message="UMLet is not installed"/>


	  	
	  	  <java jar="${umlet.home.dir}/umlet.jar" fork="true">
				<arg value="-action=convert" />
				<arg value="-format=png" />
				<arg value="-filename=${design.diagrams.dir}/*.uxf" />
	  	  		<arg value="-output=${design.diagrams.dir}" />
	  	  </java>
	  </target>
	
	
       <path id="wikitext.classpath">
			<fileset dir="${lib.dir}">
				<include name="org.eclipse.mylyn.wikitext.*core*.jar"/>
			</fileset>
		</path>

		<taskdef classpathref="wikitext.classpath" 
			resource="org/eclipse/mylyn/wikitext/core/util/anttask/tasks.properties" />
	

		<target name="design-doc" depends="design-umlet">
			
			<delete dir="${design.doc.dir}"/>
		    <mkdir dir="${design.doc.dir}"/>

			<wikitext-to-html markupLanguage="Textile" sourceEncoding="UTF-8">
						<fileset dir="${basedir}/design">
			    				<include name="*.textile"/>
						</fileset>
						<stylesheet url="styles/main.css"/>
		    </wikitext-to-html>

   		   <move todir="${design.doc.dir}">
		     <fileset dir="${basedir}/design">
		       <include name="**/*.html"/>
		     </fileset>
		   </move>
			
		   <mkdir dir="${design.doc.dir}/diagrams"/>
		   <copy todir="${design.doc.dir}">
			    <fileset dir="${basedir}/design">
			    	<include name="**/*.png"/>
			    	<include name="**/*.jpg"/>
			    </fileset>
		   </copy>

		</target>
	
		<target name="req-umlet" description="Converts Requirements UML diagram files to images">
		   	 <available file="${umlet.home.dir}/umlet.jar" property="umletExists"/>
		  	  <fail unless="umletExists" message="UMLet is not installed"/>  
			

		  	
		  	  <java jar="${umlet.home.dir}/umlet.jar" fork="true">
					<arg value="-action=convert" />
					<arg value="-format=png" />
					<arg value="-filename=${req.dir}/*.uxf" />
		  	  		<arg value="-output=${req.dir}" />
		  	  </java>
			
			
		</target>
	
		<target name="req-doc" depends="req-umlet">
			
			<delete dir="${req.doc.dir}"/>
		    <mkdir dir="${req.doc.dir}"/>
	
			<wikitext-to-html markupLanguage="Textile" sourceEncoding="UTF-8">
						<fileset dir="${req.dir}">
			    			<include name="*.textile"/>
						</fileset>
						<stylesheet url="styles/main.css"/>
		    </wikitext-to-html>
	
			<move todir="${req.doc.dir}">
		    <fileset dir="${req.dir}">
		       <include name="**/*.html"/>
		     </fileset>
		   </move>
			
		   <mkdir dir="${req.doc.dir}"/>
		   <copy todir="${req.doc.dir}">
			    <fileset dir="${req.dir}">
			    	<include name="**/*.png"/>
			    </fileset>
		   </copy>
	
		</target>
		
	  	    <target name="technicaldoc" depends="build, clean-all, clean-diagrams, design-doc, req-doc" description="Builds Technical Documentation"></target>
</project>
